/*
 * Copyright (c) 2023 ZitaoTech
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define SYM 1
#define UPPER 2

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mkp LCLK>, <&bt BT_CLR>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            bindings = <&out &kp>;
        };
    };

    behaviors {
        altsym: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "altsym";
            tapping-term-ms = <300>;
            #binding-cells = <0>;
            bindings = <&sl 1>, <&tog 1>;
        };

        altupper: tab_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "altupper";
            tapping-term-ms = <300>;
            #binding-cells = <0>;
            bindings = <&sl 2>, <&tog 2>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <7 8>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <17 18>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mkp LCLK       &mkp RCLK
&kp CLCK        &kp LGUI   &mkp LCLK  &mt ESC K_BACK  &kp TAB
&kp Q           &kp W      &kp E      &kp R           &kp T     &kp Y        &kp U    &kp I      &kp O          &kp P
&kp A           &kp S      &kp D      &kp F           &kp G     &kp H        &kp J    &kp K      &kp L          &kp BSPC
&sk LEFT_SHIFT  &kp Z      &kp X      &kp C           &kp V     &kp B        &kp N    &kp M      &mt SEMI APOS  &kp ENTER
                           &sk LCTRL                  &kp LALT  &kp SPACE    &altsym  &altupper
            >;
        };

        sym_layer {
            bindings = <
&mt K_NEXT C_VOL_UP  &mt K_PREV C_VOL_DN
&kp PSCRN     &kp K_PLAY_PAUSE &mkp LCLK  &kp F5     &kp F12
&kp HASH      &mt F1 N1        &mt F2 N2  &mt F3 N3  &mt LBKT LPAR  &mt RBKT RPAR    &kp UNDER  &kp MINUS   &kp PLUS    &kp AT
&kp STAR      &mt F4 N4        &mt F5 N5  &mt F6 N6  &kp SLASH      &kp COLON        &kp SEMI   &kp APOS    &kp DQT     &kp DEL
&sk LSHFT     &mt F7 N7        &mt F8 N8  &mt F9 N9  &kp QMARK      &kp EXCL         &kp COMMA  &kp DOT     &kp C_MUTE  &kp ENTER
                               &sk LGUI              &kp N0         &kp SPACE        &tog SYM   &tog UPPER
            >;
        };

        upper_layer {
            bindings = <
&kp PG_UP     &kp PG_DN
&bt BT_SEL 0  &bt BT_SEL 1  &td0       &bt BT_SEL 2  &bt BT_SEL 3
&kp INS       &kp UP        &kp END    &sys_reset    &ext_power EP_TOG  &none                &kp LT      &kp GT      &kp PIPE     &kp KP_EQUAL
&kp LEFT      &kp DOWN      &kp RIGHT  &none         &kp BSLH           &kp AMPS             &kp LBRC    &kp RBRC    &kp CARET    &kp BSPC
&sk LSHFT     &bt BT_SEL 2  &bt BT_SEL 3    &none    &bl BL_DEC         &bl BL_TOG           &bl BL_INC  &none       &bootloader  &kp ENTER
                            &kp LCTRL                &kp LALT           &hm OUT_TOG SPACE    &tog SYM    &tog UPPER
            >;
        };
    };
};

