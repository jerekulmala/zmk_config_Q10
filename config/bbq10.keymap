/*
 * Copyright (c) 2023 ZitaoTech
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include "keys_fi.h"

#define DEFAULT 0
#define SYM 1
#define UPPER 2

&mt {
    tapping-term-ms = <400>;
};

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mkp LCLK>, <&bt BT_CLR>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            bindings = <&out &kp>;
        };
    };

    behaviors {
        altsym: altsym {
            compatible = "zmk,behavior-tap-dance";
            label = "altsym";
            tapping-term-ms = <300>;
            #binding-cells = <0>;
            bindings = <&sl 1>, <&tog 1>;
        };

        altupper: altupper {
            compatible = "zmk,behavior-tap-dance";
            label = "altupper";
            tapping-term-ms = <300>;
            #binding-cells = <0>;
            bindings = <&sl 2>, <&tog 2>;
        };

	middleclick: middleclick {
	    compatible = "zmk,behavior-tap-dance";
	    label = "middleclick";
	    tapping-term-ms = <300>;
            #binding-cells = <0>;
	    bindings = <&mkp RCLK>, <&mkp MCLK>;
		    
	};

    keymap {
        compatible = "zmk,keymap";

        default_layer {
		bindings = <
			&mkp LCLK       &middleclick
			&kp CLCK        &sk LGUI   &mkp LCLK  &mt K_BACK ESC  &kp TAB
			&kp Q           &kp W      &kp E      &kp R           &kp T     &kp Y        &kp U    &kp I      &kp O          &kp P
			&kp A           &kp S      &kp D      &kp F           &kp G     &kp H        &kp J    &kp K      &kp L          &kp BSPC
			&sk LEFT_SHIFT  &kp Z      &kp X      &kp C           &kp V     &kp B        &kp N    &kp M      &mt FI_O_UMLAUT FI_A_UMLAUT	&kp ENTER
			&sk LCTRL                  &kp LALT  &kp SPACE    &altsym  &altupper
			>;
        };

        sym_layer {
		bindings = <
			&mt K_NEXT C_VOL_UP  &mt K_PREV C_VOL_DN
			&kp PSCRN     &kp K_PLAY_PAUSE &mkp LCLK  &kp F5     &kp F12
			&kp FI_POUND_SIGN      &mt F1 N1        &mt F2 N2    &mt F3 N3  &mt FI_LBKT FI_LPAR  &mt FI_RBKT FI_RPAR	&kp FI_UNDER		&kp FI_MINUS	&kp FI_PLUS	&kp FI_AT_SIGN
			&kp FI_STAR 	       &mt F4 N4        &mt F5 N5    &mt F6 N6  &kp FI_SLASH 	     &kp FI_COLON     &kp FI_SEMICOLON 	&kp FI_APOS 	&kp FI_DQT 	&kp DEL
			&sk LSHFT 	       &mt F7 N7        &mt F8 N8    &mt F9 N9  &kp FI_QMARK 	     &kp FI_EXCL      &kp FI_COMMA 	&kp FI_DOT 	&kp C_MUTE 	&kp ENTER
			&sk LCTRL 	       &kp N0           &kp SPACE    &to DEFAULT    &to UPPER
			>;
        };

        upper_layer {
		bindings = <
			&kp PG_UP     &kp PG_DN
			&bt BT_SEL 0  &bt BT_SEL 1  &td0       &bt BT_SEL 2  &bt BT_SEL 3
			&kp INS       &kp UP 	    &kp END    &sys_reset    &ext_power EP_TOG	&none	&kp FI_LT	&kp FI_GT	&kp FI_PIPE	&kp FI_EQUAL
			&kp LEFT      &kp DOWN 	    &kp RIGHT  &none 	     &kp FI_BSLH 	&kp FI_AMPS 		&kp FI_LBRC 	&kp FI_RBRC 	&kp FI_CARET	&kp BSPC
			&sk LSHFT     &kp PSCRN     &none      &none 	     &bl BL_DEC 	&bl BL_TOG 		&bl BL_INC 	&none 		&bootloader 	&kp ENTER
			&kp LCTRL     &kp LALT      &hm OUT_TOG SPACE        &to DEFAULT        &to UPPER
			>;
        };
    };
    };
  };
    
